// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proba.Models;

namespace Proba.Migrations
{
    [DbContext(typeof(ContextKlasa))]
    partial class ContextKlasaModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Proba.Models.Korisnik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojTelefona")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SALT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("isAdmin")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Korisnici");
                });

            modelBuilder.Entity("Proba.Models.Namirnica", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cena")
                        .HasColumnType("float");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Opis")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Tip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Namirnice");
                });

            modelBuilder.Entity("Proba.Models.Narudzbina", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int?>("StoId")
                        .HasColumnType("int");

                    b.Property<int>("UkupnaCena")
                        .HasColumnType("int");

                    b.Property<string>("Vreme")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("StoId");

                    b.ToTable("Narudzbine");
                });

            modelBuilder.Entity("Proba.Models.Recenzija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Komentar")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("Ocena")
                        .HasColumnType("int");

                    b.Property<int?>("korisnikId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("korisnikId");

                    b.ToTable("Recenzije");
                });

            modelBuilder.Entity("Proba.Models.SpojSadrzi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int?>("NamirnicaID")
                        .HasColumnType("int");

                    b.Property<int?>("NarudzbinaID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NamirnicaID");

                    b.HasIndex("NarudzbinaID");

                    b.ToTable("Spojevi");
                });

            modelBuilder.Entity("Proba.Models.Sto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojStolica")
                        .HasColumnType("int");

                    b.Property<int>("BrojStolova")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Stolovi");
                });

            modelBuilder.Entity("Proba.Models.Narudzbina", b =>
                {
                    b.HasOne("Proba.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId");

                    b.HasOne("Proba.Models.Sto", "Sto")
                        .WithMany()
                        .HasForeignKey("StoId");

                    b.Navigation("Korisnik");

                    b.Navigation("Sto");
                });

            modelBuilder.Entity("Proba.Models.Recenzija", b =>
                {
                    b.HasOne("Proba.Models.Korisnik", "korisnik")
                        .WithMany()
                        .HasForeignKey("korisnikId");

                    b.Navigation("korisnik");
                });

            modelBuilder.Entity("Proba.Models.SpojSadrzi", b =>
                {
                    b.HasOne("Proba.Models.Namirnica", "Namirnica")
                        .WithMany("Spojevi")
                        .HasForeignKey("NamirnicaID");

                    b.HasOne("Proba.Models.Narudzbina", "Narudzbina")
                        .WithMany("Spojevi")
                        .HasForeignKey("NarudzbinaID");

                    b.Navigation("Namirnica");

                    b.Navigation("Narudzbina");
                });

            modelBuilder.Entity("Proba.Models.Namirnica", b =>
                {
                    b.Navigation("Spojevi");
                });

            modelBuilder.Entity("Proba.Models.Narudzbina", b =>
                {
                    b.Navigation("Spojevi");
                });
#pragma warning restore 612, 618
        }
    }
}
